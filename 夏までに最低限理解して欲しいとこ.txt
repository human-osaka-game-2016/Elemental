全てvisualStudioで書くこと
プログラムを書くときは毎回別プロジェクトに書くこと
1行ごとに自分がいまどんな処理をしたかコメントを書くこと

問題１

問１
空欄を埋めなさい

for文、while文、do-while文で以下の出力結果になるようにしなさい
void main()
{
	// for文
	for(int i = 1;i < [ ① ]; [ ② ])
	{
		printf("%d回目", [ ③ ]);
	}

	// while文
	while( j < [ ① ])
	{
		printf("%d回目", [ ② ]);
		[ ③ ];
	}

	// do-while文
	do
	{
		printf("%d回目", [ ① ]);
		[ ② ];
	}while(n < [ ③ ]);

	while(1);
}

出力結果
1回目
2回目
3回目
4回目
5回目


問２
for文、while文、do-while文で以下の出力結果になるようにしなさい

書式

for文

for(変数の初期化; 条件文; 初期化した変数の加減処理)
{
	処理内容
}

while文

while(条件式)
{
	処理内容
}

do-while文

do
{
	処理内容
}while(条件式);

出力結果
5回目
4回目
3回目
2回目
1回目

※できれば挑戦してみてください
チャレンジ問題
九九表を作れ

出力結果
1 2 3 4 5 6 7 8 9
2 4 6 8 10 12 14 16 18
3 6 9 12 15 18 21 24 27
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 45
6 12 18 24 30 36 42 48 54
7 14 21 28 35 42 49 56 63
8 16 24 32 40 48 56 64 72
9 18 27 36 45 54 63 72 81


問題２

問１
空欄を埋めなさい

for、while、do-while　のどれかを使い以下の出力結果になるようにしなさい
void main ()
{
	int Array[10] ={ 4, 7, 8, 2, 9, 1, 0, 5, 7, 3 };
	int i = 0;

	for(i = 0; i < [ ① ]; [ ② ])
	{
		printf("Array[%d] = %d\n", [ ③ ], [ ④ ][ ③ ]);
	
	}

	while(i < [ ① ])
	{
		printf("Array[%d] = %d\n", [ ② ], [ ③ ][ ② ]);
		[ ④ ];
	}

	do
	{
		printf("Array[%d] = %d\n", [ ① ], [ ② ][ ① ]);
		[ ③ ];
	}while(i < [ ④ ]);

	while(1);
}

出力結果
Array[0] = 4
Array[1] = 7
Array[2] = 8
Array[3] = 2
Array[4] = 9
Array[5] = 1
Array[6] = 0
Array[7] = 5
Array[8] = 7
Array[9] = 3

問２
要素数14個の配列を初期化して以下の出力結果になるようにしなさい
※ = 以降は個人よって異なります

書式

宣言と同時に初期化する場合
型　変数名[要素数] = {(要素の初期化部分)};

宣言後に初期化する場合
型　変数名[要素数];
変数名[最初の要素] = 初期化する数字;
変数名[2番目の要素] = 初期化する数字;
	┇
変数名[最後の要素] = 初期化する数字;

出力結果
Array[0] =
Array[1] =
Array[2] = 
Array[3] = 
Array[4] = 
Array[5] = 
Array[6] = 
Array[7] = 
Array[8] = 
Array[9] = 
Array[10] = 
Array[11] = 
Array[12] = 
Array[13] = 

※できれば挑戦してみてください
チャレンジ問題
要素数10個の配列を初期化して要素番号5番目に6を代入してく以下の出力結果になるようにしなさい
※初期化の際に5番目の要素に6をいれのるのは禁止です
※ = 以降は個人よって異なります

出力結果
Array[0] =
Array[1] =
Array[2] = 
Array[3] = 
Array[4] = 
Array[5] = 6
Array[6] = 
Array[7] = 
Array[8] = 
Array[9] =

問題３

問１　
空欄を埋めなさい

1番
戻り値なし、引数なしの自作関数をmainに呼び出し以下の出力結果になるようにしなさい

[ ① ];

void main ()
{
	[ ② ];
	while(1);
}

void Value()
{
	float a = 8;
	float b = 6;
	printf("a = [ ③ ]\n", [ ④ ]);
	printf("b = [ ③ ]\n", [ ⑥ ]);
}

出力結果
a = 8.000000
b = 6.000000
/**
 * 0の数が違うかもしれませんが間違いではないです
 * こんな感じで出力されれば大丈夫です
 */

2番
戻り値なし、引数ありの自作関数をmainに呼び出し以下の出力結果になるようにしなさい

[ ① ];

void main ()
{
	int val = 0;
	[ ② ];
	while(1);
}

void Value([ ③ ])
{
	[ ③の変数名 ] = 10;
	printf("val = %d\n", [ ④ ]);
}

出力結果
val = 10

3番
戻り値あり、引数なしの自作関数をmainに呼び出し以下の出力結果になるようにしなさい

[ ① ];

void main()
{
	int val = 0;
	val = [ ② ];
	printf("val = %d\n", [ ③ ]);
}

int Value()
{
	int a = 初期化する数字;
	int b = 初期化する数字;
	int sum;

	sum = a + b;
	[ ④ ];
}

出力結果
val = aの初期化した数字 + bの初期化した数字


4番
戻り値あり、引数ありの自作関数をmainに呼び出し以下の出力結果になるようにしなさい

[ ① ];

void main()
{
	int val = 0;
	val = [ ② ];
	printf("val = %d\n", [ ③ ]);
}

int Value([ ④ ], [ ⑤ ])
{
	int sum = 0;
	sum = [ ④の変数名 ] + [ ⑤の変数名 ];
	[ ⑥ ];
}

出力結果
val = ④の値と⑤の値を足した数
例 : val = 13


問２

1番
戻り値なし、関数名 Number 、引数なしの自作関数をmainで呼び出し以下の出力結果になるようにしなさい
※宣言する型はfloat型にすること

出力結果
変数名 = 初期化した数字.00000

2番
戻り値なし、関数名 Number、引数 int y、の自作関数をmainで呼び出し以下の出力結果になるようにしなさい
※宣言する型はfloat型にすること

出力結果
変数名 = 引数に入れた値.000000

3番
戻り値あり、関数名 Number、引数なしの自作関数をmainで呼び出し以下の出力結果になるようにしなさい
戻り値は2つの値を合計したものを指定しなさい

出力結果
変数名 = 2つ値の合計値


※できれば挑戦してみてください
チャレンジ問題

戻り値あり、関数名 Number、引数 int x, int y、の自作関数をで呼び出し以下の出力結果になるようにしなさい
戻り値は2つ値の平均したのもを指定しなさい

出力結果
変数名 = 2つの値の平均値










 